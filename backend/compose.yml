x-app-container: &app-container
  stdin_open: true
  tty: true
  build:
    context: .
    target: dev
  volumes:
    - ./:/opt/app
  env_file:
    - vars/dev.env
    - vars/dev.local
  depends_on:
    mongodb:
      condition: service_healthy
    postgres:
      condition: service_healthy
    kafka:
      condition: service_started
    zookeeper:
      condition: service_started

services:
  web:
    <<: *app-container
    container_name: capybarka-web
    build:
      context: ./
      dockerfile: Dockerfile
      target: dev
    command: python main.py
    ports:
      - "6969:8080"
    networks:
      default:
        aliases:
          - capybarka.web.docker

  postgres:
    container_name: capybarka-postgres
    image: postgres:17.0-alpine
    environment:
      - POSTGRES_USER=capybarka
      - POSTGRES_PASSWORD=capybarka
      - POSTGRES_DB=capybarka
    expose:
      - "5432"
    ports:
      - '5469:5432'
    volumes:
      - ./.docker-data/postgres_data:/var/lib/postgresql/data/
      - ./src/infra/migrations/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "capybarka"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  
    networks:
      default:
        aliases:
          - capybarka.postgres.docker

  mongodb:
    container_name: capybarka-mongodb
    image: mongo:8.0.1
    restart: unless-stopped
    volumes:
      - ./.docker-data/mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: capybarka
      MONGO_INITDB_ROOT_PASSWORD: capybarka
    expose:
      - "27017"
    ports:
      - "27069:27017"
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      default:
        aliases:
          - capybarka.mongo.docker

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: capybarka-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      default:
        aliases:
          - capybarka.zookeeper.docker

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: capybarka-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "capybarka-zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://capybarka-kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      default:
        aliases:
          - capybarka.kafka.docker

volumes:
  mongodb_data:
  postgres_data:

networks:
  default:
